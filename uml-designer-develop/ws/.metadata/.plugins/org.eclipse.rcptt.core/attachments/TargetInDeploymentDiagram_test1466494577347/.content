// Reconnect target from Component1 to Artifact2
with [get-editor "NewModel Deployment Diagram"] {
    with [get-diagram -index 1 | get-edit-part -name "NewModel Deployment Diagram"] {
        with [get-edit-part -name Component1] {
            get-edit-part -className DNodeContainerViewNodeContainerCompartmentEditPart | mouse-move 69 3 -height 38 
                -width 118
            with [get-target-connection 0 | get-handle SiriusConnectionEndPointHandle -index 1] {
                mouse-move 5 141 button1 -height 7 -width 7
                mouse-press 5 141 button1 -height 7 -width 7
                mouse-move 5 142 -mask 524288 -height 7 -width 7
            }
        }
        mouse-drag 320 282 button1 524288 -height 465 -width 701
        mouse-release 320 282 button1 524288 -height 465 -width 701
    }
    get-diagram -index 1 | get-edit-part -name "NewModel Deployment Diagram" | mouse-move 11 340 -height 465 -width 701
}

// Check diagram and Model
with [get-editor "NewModel Deployment Diagram" | get-diagram -index 1 | get-edit-part 
    -name "NewModel Deployment Diagram" | get-edit-part -name Artifact2 | get-target-connection 0] {
    get-property "element.target.source.size" | equals 1 | verify-true
    get-property "element.target.source.Artifact[0].name" | equals Artifact1 | verify-true
    get-property "element.target.target.size" | equals 1 | verify-true
    get-property "element.target.target.Artifact[0].name" | equals Artifact2 | verify-true
    get-property "element.sourceNode.name" | equals Artifact1 | verify-true
    get-property "element.targetNode.name" | equals Artifact2 | verify-true
    get-property "getFigure().isVisible()" | equals true | verify-true
}
