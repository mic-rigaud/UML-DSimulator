// Reconnect link target from Device1 to Device2
with [get-editor "NewModel Deployment Diagram"] {
    with [get-diagram -index 1] {
        with [get-edit-part -name "NewModel Deployment Diagram"] {
           // Select Link
           with [get-edit-part -name Device1] {
                with [get-target-connection 0] {
                    mouse-move 16 53 button1 -height 96 -width 47
                    mouse-press 16 53 button1 -height 96 -width 47
                    mouse-release 16 53 button1 524288 -height 96 -width 47
                }
                // move target side
                with [get-target-connection 0 | get-handle SiriusConnectionEndPointHandle -index 1] {
                    mouse-move 1 1 button1 -height 7 -width 7
                    mouse-press 1 1 button1 -height 7 -width 7
                }
            }
        }
        // drop on Device2
        with [get-edit-part -name "NewModel Deployment Diagram" | get-edit-part -name Device2
            | get-edit-part -className DNodeContainerViewNodeContainerCompartmentEditPart]{ 
            mouse-drag 1 1 button1 524288 -height 524 -width 713
            mouse-release 1 1 button1 524288 -height 524 -width 713
        }
    }
}
// Check Diagram
with [get-editor "NewModel Deployment Diagram" | get-diagram -index 1 | get-edit-part 
    -name "NewModel Deployment Diagram"] {
    with [get-edit-part -name Device2 | get-target-connection 0] {
        get-property "element.sourceNode.name" | equals Node1 | verify-true
        get-property "element.targetNode.name" | equals Device2 | verify-true
    }
    get-property "element.edges.DEdge[0].sourceNode.name" | equals Node1 | verify-true
    get-property "element.edges.DEdge[0].targetNode.name" | equals Device2 | verify-true
}
get-editor "NewModel Deployment Diagram" | get-diagram -index 1 | get-edit-part 
    -name "NewModel Deployment Diagram" | get-edit-part -name Device1 
    | verify-error{ get-target-connection 0 }