// Try to delete operation
with [get-editor "Test Sequence Diagram"] {
    with [get-diagram -index 1 | get-edit-part -name "Test Sequence Diagram"] {
        with [get-edit-part -name "Class2 : Class2 [1]" | get-edit-part -name Class2 | get-edit-part 
            -name "Operation_1" | get-edit-part -className SquareEditPart] {
            mouse-move 4 20 button1 -height 40 -width 20
            mouse-press 4 20 button1 -height 40 -width 20
            mouse-release 4 20 button1 524288 -height 40 -width 20
        }
    }
    get-button "Delete from Model" | click  
}
// Try to delete Message
with [get-editor "Test Sequence Diagram"] {
    with [get-diagram -index 1] {
        with [get-edit-part -name "Test Sequence Diagram"] {
           with [get-edit-part -name "Actor2 : Actor2 [1]" | get-edit-part -name Actor2 | get-edit-part 
                -name "Message_1" | get-edit-part -className SquareEditPart] {
                mouse-move 8 22 button1 -height 30 -width 20
                mouse-press 8 22 button1 -height 30 -width 20
                mouse-release 8 22 button1 524288 -height 30 -width 20
            }
        }
    }
    get-button "Delete from Model" | click
}

// Check they are not deleted
with [get-editor "Test Sequence Diagram" | get-diagram -index 1 | get-edit-part -name "Test Sequence Diagram"] {
    get-edit-part -name "Class2 : Class2 [1]" | get-edit-part -name Class2 | get-edit-part -name "Operation_1" 
        | get-target-connection 0 | get-property "getFigure().isVisible()" | equals true | verify-true
    get-edit-part -name "Actor2 : Actor2 [1]" | get-edit-part -name Actor2 | get-edit-part -name "Message_1" 
        | get-target-connection 0 | get-property "getFigure().isVisible()" | equals true | verify-true
}

// Delete Asynchronous Operation
with [get-editor "Test Sequence Diagram"] {
    with [get-diagram -index 1 | get-edit-part -name "Test Sequence Diagram"] {
        mouse-move 140 95 -height 500 -width 767
        with [get-edit-part -name "Class2 : Class2 [1]" | get-edit-part -name Class2 | get-edit-part 
            -name "Operation_1" | get-target-connection 0] {
            mouse-move 52 31 button1 -height 52 -width 230
            mouse-press 52 31 button1 -height 52 -width 230
            mouse-release 54 32 button1 524288 -height 54 -width 234
            mouse-hover 54 32 -height 54 -width 234
        }
        mouse-move 305 0 -height 500 -width 767
    }
    get-button "Delete from Model" | click
}
// Delete Asynchronous Operation
with [get-editor "Test Sequence Diagram"] {
    with [get-diagram -index 1 | get-edit-part -name "Test Sequence Diagram"] {
        mouse-move 570 112 -height 500 -width 767
        with [get-edit-part -name "Actor2 : Actor2 [1]" | get-edit-part -name Actor2 | get-edit-part -name "Message_1" 
            | get-target-connection 0] {
            mouse-move 120 33 button1 -height 52 -width 210
            mouse-press 120 33 button1 -height 52 -width 210
            mouse-release 122 34 button1 524288 -height 54 -width 214
        }
        mouse-move 209 5 -height 500 -width 767
    }
    get-button "Delete from Model" | click
}

// Check they are deleted from diagram
with [get-editor "Test Sequence Diagram" | get-diagram -index 1 | get-edit-part -name "Test Sequence Diagram"] {
    verify-error {get-edit-part -name "Class2 : Class2 [1]" | get-edit-part -name Class2 | get-edit-part -name "Operation_1" 
        | get-target-connection 0 | get-property "getFigure().isVisible()" | equals true | verify-true}
    verify-error {get-edit-part -name "Actor2 : Actor2 [1]" | get-edit-part -name Actor2 | get-edit-part -name "Message_1" 
        | get-target-connection 0 | get-property "getFigure().isVisible()" | equals true | verify-true}
}
