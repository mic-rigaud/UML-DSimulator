// Create Exit Point outside of region1 in state machine
with [get-editor "NewModel State Machine Diagram"] {
    with [get-palette | get-palette-entry "Exit Point"] {
        mouse-move 41 7 button1 -height 23 -width 134
        mouse-press 41 7 button1 -height 23 -width 134
        mouse-release 41 7 button1 524288 -height 23 -width 134
    }
    with [get-diagram -index 1 | get-edit-part -name "NewModel State Machine Diagram" | get-edit-part -name NewModel 
        | get-edit-part -className DNodeContainerViewNodeContainerCompartmentEditPart] {
        mouse-move 725 99 button1 -height 517 -width 817
        mouse-press 725 99 button1 -height 517 -width 817
        mouse-release 725 99 button1 524288 -height 517 -width 817
    }
}
// Check Diagram
get-editor "NewModel State Machine Diagram" | get-diagram -index 1 | get-edit-part 
    -name "NewModel State Machine Diagram" | get-edit-part -name NewModel | get-edit-part -name ExitPoint1 
    | get-edit-part -className WorkspaceImageEditPart | get-property "getFigure().isVisible()" | equals true 
    | verify-true
with [get-editor "NewModel State Machine Diagram" | get-diagram -index 1 | get-edit-part 
    -name "NewModel State Machine Diagram" | get-edit-part -name NewModel | get-edit-part -name ExitPoint1 
    | get-edit-part -name ExitPoint1] {
    get-property "getFigure().getText()" | equals ExitPoint1 | verify-true
    get-property "getFigure().isVisible()" | equals true | verify-true
}
// Check model
with [get-editor "NewModel State Machine Diagram" | get-diagram -index 1 | get-edit-part 
    -name "NewModel State Machine Diagram" | get-edit-part -name NewModel | get-edit-part -name ExitPoint1 
    | get-edit-part -name ExitPoint1] {
    get-property "element.target.owner.name" | equals NewModel | verify-true
    get-property "element.target.name" | equals ExitPoint1 | verify-true
    get-property "element.target.kind" | equals exitPoint | verify-true
}

// Create new Exit Point in Region1
with [get-editor "NewModel State Machine Diagram"] {
    with [get-palette | get-palette-entry "Exit Point"] {
        mouse-move 38 4 button1 -height 23 -width 134
        mouse-press 38 4 button1 -height 23 -width 134
        mouse-release 38 4 button1 524288 -height 23 -width 134
    }
    with [get-diagram -index 1 | get-edit-part -name "NewModel State Machine Diagram" | get-edit-part -name NewModel 
        | get-edit-part -className DNodeContainerViewNodeContainerCompartmentEditPart] {
        with [get-edit-part -name Region1 | get-edit-part 
            -className DNodeContainerViewNodeContainerCompartment2EditPart] {
            mouse-move 37 54 button1 -height 481 -width 571
            mouse-press 37 54 button1 -height 481 -width 571
            mouse-release 37 54 button1 524288 -height 481 -width 571
        }
    }
}
// Check model
with [get-editor "NewModel State Machine Diagram" | get-diagram -index 1 | get-edit-part 
    -name "NewModel State Machine Diagram" | get-edit-part -name NewModel | get-edit-part -name ExitPoint2 
    | get-edit-part -name ExitPoint2] {
    get-property "element.target.owner.name" | equals NewModel | verify-true
    get-property "element.target.name" | equals ExitPoint2 | verify-true
    get-property "element.target.kind" | equals exitPoint | verify-true
}

// Try to create Exit pointe outside of state machine (invalid action)
with [get-editor "NewModel State Machine Diagram"] {
    with [get-palette | get-palette-entry "Exit Point"] {
        mouse-move 31 18 button1 -height 23 -width 134
        mouse-press 31 18 button1 -height 23 -width 134
        mouse-release 31 18 button1 524288 -height 23 -width 134
    }
    with [get-diagram -index 1 | get-edit-part -name "NewModel State Machine Diagram"] {
        mouse-move 823 168 button1 -height 524 -width 824
        mouse-press 823 168 button1 -height 524 -width 824
        mouse-release 823 168 button1 524288 -height 524 -width 824
    }
}

