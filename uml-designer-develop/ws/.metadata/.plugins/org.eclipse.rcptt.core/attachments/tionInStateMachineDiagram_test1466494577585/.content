// Direct edit transition without any guard
with [get-editor "NewModel State Machine Diagram"] {
    with [get-diagram -index 1] {

        get-edit-part -name "NewModel State Machine Diagram" | get-edit-part -name NewModel | get-edit-part 
            -className DNodeContainerViewNodeContainerCompartmentEditPart | get-edit-part -name Region1 | get-edit-part 
            -className DNodeContainerViewNodeContainerCompartment2EditPart | get-edit-part -name State2 
            | get-target-connection 0 | get-edit-part -className "" | activate-direct-edit
    }
    with [get-editbox] {
        set-text "[Guard1]"
    }
    key-type Enter
    with [get-diagram -index 1] {
        commit-direct-edit
        key-type Enter
    }
}
// Check new guard is create (opaque expression)
with [get-editor "NewModel State Machine Diagram" | get-diagram -index 1 | get-edit-part 
    -name "NewModel State Machine Diagram" | get-edit-part -name NewModel | get-edit-part 
    -className DNodeContainerViewNodeContainerCompartmentEditPart | get-edit-part -name Region1 | get-edit-part 
    -className DNodeContainerViewNodeContainerCompartment2EditPart | get-edit-part -name State2 
    | get-target-connection 0] {
    get-property "element.semanticElements.Transition[0].guard.name" | equals "null_transition" | verify-true
    get-property "element.semanticElements.Transition[0].guard.specification.name" | equals "null_guard" | verify-true
    get-property "element.semanticElements.Transition[0].guard.specification.body" | equals "[Guard1]" | verify-true
    get-property "element.semanticElements.Transition[0].kind" | equals external | verify-true
}
// Direct edit existing guard
with [get-editor "NewModel State Machine Diagram"] {
    with [get-diagram -index 1] {
        with [get-edit-part -name "NewModel State Machine Diagram" | get-edit-part -name NewModel | get-edit-part 
            -className DNodeContainerViewNodeContainerCompartmentEditPart] {
            with [get-edit-part -name Region1 | get-edit-part 
                -className DNodeContainerViewNodeContainerCompartment2EditPart] {
                with [get-edit-part -name State2 | get-target-connection 0 | get-edit-part -className ""] {
                    mouse-move 30 9 button1 -height 13 -width 42
                    mouse-press 30 9 button1 -height 13 -width 42
                    mouse-release 30 9 button1 524288 -height 13 -width 42
                }
            }
        }
      with [get-edit-part -name "NewModel State Machine Diagram" | get-edit-part -name NewModel | get-edit-part 
            -className DNodeContainerViewNodeContainerCompartmentEditPart | get-edit-part -name Region1 | get-edit-part 
            -className DNodeContainerViewNodeContainerCompartment2EditPart] {
            get-edit-part -name State2 | get-target-connection 0 | get-edit-part -className "" | activate-direct-edit
        }
    }

    with [get-editbox] {
        set-text "[Guard]"
        key-type Enter
    }
    with [get-diagram -index 1] {
        commit-direct-edit
        key-type Enter
    }
}
with [get-editor "NewModel State Machine Diagram" | get-diagram -index 1 | get-edit-part 
    -name "NewModel State Machine Diagram" | get-edit-part -name NewModel | get-edit-part 
    -className DNodeContainerViewNodeContainerCompartmentEditPart | get-edit-part -name Region1 | get-edit-part 
    -className DNodeContainerViewNodeContainerCompartment2EditPart | get-edit-part -name State2 
    | get-target-connection 0] {
    get-property "element.semanticElements.Transition[0].guard.name" | equals "null_transition" | verify-true
    get-property "element.semanticElements.Transition[0].guard.specification.name" | equals "null_guard" | verify-true
    get-property "element.semanticElements.Transition[0].guard.specification.body" | equals "[Guard]" | verify-true
    get-property "element.semanticElements.Transition[0].kind" | equals external | verify-true
}

//-----------------------------------------------------------
// DirectEdit to add a trigger
with [get-editor "NewModel State Machine Diagram"] {
    with [get-diagram -index 1] {
        with [get-edit-part -name "NewModel State Machine Diagram" | get-edit-part -name NewModel | get-edit-part 
            -className DNodeContainerViewNodeContainerCompartmentEditPart | get-edit-part -name Region1 | get-edit-part 
            -className DNodeContainerViewNodeContainerCompartment2EditPart] {
            with [get-edit-part -name State2 | get-target-connection 0] {
                mouse-move 189 35 button1 -height 52 -width 293
                mouse-press 189 35 button1 -height 52 -width 293
                mouse-release 189 35 button1 524288 -height 52 -width 293
            }
        }
        get-edit-part -name "NewModel State Machine Diagram" | get-edit-part -name NewModel | get-edit-part 
            -className DNodeContainerViewNodeContainerCompartmentEditPart | get-edit-part -name Region1 | get-edit-part 
            -className DNodeContainerViewNodeContainerCompartment2EditPart | get-edit-part -name State2 
            | get-target-connection 0 | get-edit-part -className "" | activate-direct-edit
    }
    with [get-editbox] {
        key-type Left -times 7
        set-text "trigger1[Guard]"
        key-type Enter
    }
    with [get-diagram -index 1] {
        commit-direct-edit
        key-type Enter
    }
}
with [get-editor "NewModel State Machine Diagram" | get-diagram -index 1 | get-edit-part 
    -name "NewModel State Machine Diagram" | get-edit-part -name NewModel | get-edit-part 
    -className DNodeContainerViewNodeContainerCompartmentEditPart | get-edit-part -name Region1 | get-edit-part 
    -className DNodeContainerViewNodeContainerCompartment2EditPart | get-edit-part -name State2 
    | get-target-connection 0 | get-edit-part -className ""] {
    get-property "element.name" | equals "trigger1[Guard]" | verify-true
    get-property "element.semanticElements.Transition[0].guard.specification.body" | equals "[Guard]" | verify-true
    get-property "element.semanticElements.Transition[0].trigger.Trigger[0].name" | equals trigger1 | verify-true
}
// Direct-edit to add second trigger
with [get-editor "NewModel State Machine Diagram"] {
    with [get-diagram -index 1] {
        with [get-edit-part -name "NewModel State Machine Diagram" | get-edit-part -name NewModel | get-edit-part 
            -className DNodeContainerViewNodeContainerCompartmentEditPart | get-edit-part -name Region1 | get-edit-part 
            -className DNodeContainerViewNodeContainerCompartment2EditPart] {
            with [get-edit-part -name State2 | get-target-connection 0] {
                mouse-move 189 35 button1 -height 52 -width 293
                mouse-press 189 35 button1 -height 52 -width 293
                mouse-release 189 35 button1 524288 -height 52 -width 293
            }
        }
        get-edit-part -name "NewModel State Machine Diagram" | get-edit-part -name NewModel | get-edit-part 
            -className DNodeContainerViewNodeContainerCompartmentEditPart | get-edit-part -name Region1 | get-edit-part 
            -className DNodeContainerViewNodeContainerCompartment2EditPart | get-edit-part -name State2 
            | get-target-connection 0 | get-edit-part -className "" | activate-direct-edit
    }
    with [get-editbox] {
        key-type Left -times 7
        set-text "trigger1,trigger2[Guard]"
        key-type Enter
    }
    with [get-diagram -index 1] {
        commit-direct-edit
        key-type Enter
    }
}
with [get-editor "NewModel State Machine Diagram" | get-diagram -index 1 | get-edit-part 
    -name "NewModel State Machine Diagram" | get-edit-part -name NewModel | get-edit-part 
    -className DNodeContainerViewNodeContainerCompartmentEditPart | get-edit-part -name Region1 | get-edit-part 
    -className DNodeContainerViewNodeContainerCompartment2EditPart | get-edit-part -name State2 
    | get-target-connection 0 | get-edit-part -className ""] {
    get-property "element.name" | equals "trigger1,trigger2[Guard]" | verify-true
    get-property "element.semanticElements.Transition[0].guard.specification.body" | equals "[Guard]" | verify-true
    get-property "element.semanticElements.Transition[0].trigger.Trigger[0].name" | equals trigger1 | verify-true
    get-property "element.semanticElements.Transition[0].trigger.Trigger[1].name" | equals trigger2 | verify-true
}

// Remove one trigger
with [get-editor "NewModel State Machine Diagram"] {
    with [get-diagram -index 1] {
        with [get-edit-part -name "NewModel State Machine Diagram" | get-edit-part -name NewModel | get-edit-part 
            -className DNodeContainerViewNodeContainerCompartmentEditPart | get-edit-part -name Region1 | get-edit-part 
            -className DNodeContainerViewNodeContainerCompartment2EditPart] {
            with [get-edit-part -name State2 | get-target-connection 0] {
                mouse-move 189 35 button1 -height 52 -width 293
                mouse-press 189 35 button1 -height 52 -width 293
                mouse-release 189 35 button1 524288 -height 52 -width 293
            }
        }
        get-edit-part -name "NewModel State Machine Diagram" | get-edit-part -name NewModel | get-edit-part 
            -className DNodeContainerViewNodeContainerCompartmentEditPart | get-edit-part -name Region1 | get-edit-part 
            -className DNodeContainerViewNodeContainerCompartment2EditPart | get-edit-part -name State2 
            | get-target-connection 0 | get-edit-part -className "" | activate-direct-edit
    }
    with [get-editbox] {
        key-type Left -times 7
        set-text "trigger1[Guard]"
        key-type Enter
    }
    with [get-diagram -index 1] {
        commit-direct-edit
        key-type Enter
    }
}
with [get-editor "NewModel State Machine Diagram" | get-diagram -index 1 | get-edit-part 
    -name "NewModel State Machine Diagram" | get-edit-part -name NewModel | get-edit-part 
    -className DNodeContainerViewNodeContainerCompartmentEditPart | get-edit-part -name Region1 | get-edit-part 
    -className DNodeContainerViewNodeContainerCompartment2EditPart | get-edit-part -name State2 
    | get-target-connection 0 | get-edit-part -className ""] {
    get-property "element.name" | equals "trigger1[Guard]" | verify-true
    get-property "element.semanticElements.Transition[0].guard.specification.body" | equals "[Guard]" | verify-true
    get-property "element.semanticElements.Transition[0].trigger.Trigger[0].name" | equals trigger1 | verify-true
    verify-error{get-property "element.semanticElements.Transition[0].trigger.Trigger[1].name" | equals trigger2 | verify-true}
}
// Remove one trigger
with [get-editor "NewModel State Machine Diagram"] {
    with [get-diagram -index 1] {
        with [get-edit-part -name "NewModel State Machine Diagram" | get-edit-part -name NewModel | get-edit-part 
            -className DNodeContainerViewNodeContainerCompartmentEditPart | get-edit-part -name Region1 | get-edit-part 
            -className DNodeContainerViewNodeContainerCompartment2EditPart] {
            with [get-edit-part -name State2 | get-target-connection 0] {
                mouse-move 189 35 button1 -height 52 -width 293
                mouse-press 189 35 button1 -height 52 -width 293
                mouse-release 189 35 button1 524288 -height 52 -width 293
            }
        }
        get-edit-part -name "NewModel State Machine Diagram" | get-edit-part -name NewModel | get-edit-part 
            -className DNodeContainerViewNodeContainerCompartmentEditPart | get-edit-part -name Region1 | get-edit-part 
            -className DNodeContainerViewNodeContainerCompartment2EditPart | get-edit-part -name State2 
            | get-target-connection 0 | get-edit-part -className "" | activate-direct-edit
    }
    with [get-editbox] {
        key-type Left -times 7
        set-text "[Guard]"
        key-type Enter
    }
    with [get-diagram -index 1] {
        commit-direct-edit
        key-type Enter
    }
}
with [get-editor "NewModel State Machine Diagram" | get-diagram -index 1 | get-edit-part 
    -name "NewModel State Machine Diagram" | get-edit-part -name NewModel | get-edit-part 
    -className DNodeContainerViewNodeContainerCompartmentEditPart | get-edit-part -name Region1 | get-edit-part 
    -className DNodeContainerViewNodeContainerCompartment2EditPart | get-edit-part -name State2 
    | get-target-connection 0 | get-edit-part -className ""] {
    get-property "element.name" | equals "[Guard]" | verify-true
    get-property "element.semanticElements.Transition[0].guard.specification.body" | equals "[Guard]" | verify-true
    verify-error{get-property "element.semanticElements.Transition[0].trigger.Trigger[0].name" | equals trigger3 | verify-true}
}
//---------------------------------------------------------------------------------
// Direct-edit behavior expression
with [get-editor "NewModel State Machine Diagram"] {
    with [get-diagram -index 1] {
        with [get-edit-part -name "NewModel State Machine Diagram" | get-edit-part -name NewModel | get-edit-part 
            -className DNodeContainerViewNodeContainerCompartmentEditPart | get-edit-part -name Region1 | get-edit-part 
            -className DNodeContainerViewNodeContainerCompartment2EditPart] {
            with [get-edit-part -name State2 | get-target-connection 0] {
                mouse-move 189 35 button1 -height 52 -width 293
                mouse-press 189 35 button1 -height 52 -width 293
                mouse-release 189 35 button1 524288 -height 52 -width 293
            }
        }
        get-edit-part -name "NewModel State Machine Diagram" | get-edit-part -name NewModel | get-edit-part 
            -className DNodeContainerViewNodeContainerCompartmentEditPart | get-edit-part -name Region1 | get-edit-part 
            -className DNodeContainerViewNodeContainerCompartment2EditPart | get-edit-part -name State2 
            | get-target-connection 0 | get-edit-part -className "" | activate-direct-edit
    }
    with [get-editbox] {
        key-type Left -times 7
        set-text "[Guard]/behaviorExpression"
        key-type Enter
    }
    with [get-diagram -index 1] {
        commit-direct-edit
        key-type Enter
    }
}
with [get-editor "NewModel State Machine Diagram" | get-diagram -index 1 | get-edit-part 
    -name "NewModel State Machine Diagram" | get-edit-part -name NewModel | get-edit-part 
    -className DNodeContainerViewNodeContainerCompartmentEditPart | get-edit-part -name Region1 | get-edit-part 
    -className DNodeContainerViewNodeContainerCompartment2EditPart | get-edit-part -name State2 
    | get-target-connection 0 | get-edit-part -className ""] {
    get-property "element.name" | equals "[Guard]/behaviorExpression" | verify-true
}

//---------------------------------------------------------------------------------
// test direct edit rename effect
// Direct-edit behavior expression
with [get-editor "NewModel State Machine Diagram"] {
    with [get-diagram -index 1] {
        with [get-edit-part -name "NewModel State Machine Diagram" | get-edit-part -name NewModel | get-edit-part 
            -className DNodeContainerViewNodeContainerCompartmentEditPart | get-edit-part -name Region1 | get-edit-part 
            -className DNodeContainerViewNodeContainerCompartment2EditPart] {
            with [get-edit-part -name State2 | get-target-connection 0] {
                mouse-move 189 35 button1 -height 52 -width 293
                mouse-press 189 35 button1 -height 52 -width 293
                mouse-release 189 35 button1 524288 -height 52 -width 293
            }
        }
        get-edit-part -name "NewModel State Machine Diagram" | get-edit-part -name NewModel | get-edit-part 
            -className DNodeContainerViewNodeContainerCompartmentEditPart | get-edit-part -name Region1 | get-edit-part 
            -className DNodeContainerViewNodeContainerCompartment2EditPart | get-edit-part -name State2 
            | get-target-connection 0 | get-edit-part -className "" | activate-direct-edit
    }
    with [get-editbox] {
        key-type Left -times 7
        set-text "[Guard]/behaviorExpression1"
        key-type Enter
    }
    with [get-diagram -index 1] {
        commit-direct-edit
        key-type Enter
    }
}
with [get-editor "NewModel State Machine Diagram" | get-diagram -index 1 | get-edit-part 
    -name "NewModel State Machine Diagram" | get-edit-part -name NewModel | get-edit-part 
    -className DNodeContainerViewNodeContainerCompartmentEditPart | get-edit-part -name Region1 | get-edit-part 
    -className DNodeContainerViewNodeContainerCompartment2EditPart | get-edit-part -name State2 
    | get-target-connection 0 | get-edit-part -className ""] {
    get-property "element.name" | equals "[Guard]/behaviorExpression1" | verify-true
    get-property "element.semanticElements.Transition[0].effect.name" | equals behaviorExpression1 | verify-true
}
//---------------------------------------------------------------------------------
// test direct edit remove effect
// Direct-edit behavior expression
with [get-editor "NewModel State Machine Diagram"] {
    with [get-diagram -index 1] {
        with [get-edit-part -name "NewModel State Machine Diagram" | get-edit-part -name NewModel | get-edit-part 
            -className DNodeContainerViewNodeContainerCompartmentEditPart | get-edit-part -name Region1 | get-edit-part 
            -className DNodeContainerViewNodeContainerCompartment2EditPart] {
            with [get-edit-part -name State2 | get-target-connection 0] {
                mouse-move 189 35 button1 -height 52 -width 293
                mouse-press 189 35 button1 -height 52 -width 293
                mouse-release 189 35 button1 524288 -height 52 -width 293
            }
        }
        get-edit-part -name "NewModel State Machine Diagram" | get-edit-part -name NewModel | get-edit-part 
            -className DNodeContainerViewNodeContainerCompartmentEditPart | get-edit-part -name Region1 | get-edit-part 
            -className DNodeContainerViewNodeContainerCompartment2EditPart | get-edit-part -name State2 
            | get-target-connection 0 | get-edit-part -className "" | activate-direct-edit
    }
    with [get-editbox] {
        key-type Left -times 7
        set-text "[Guard]"
        key-type Enter
    }
    with [get-diagram -index 1] {
        commit-direct-edit
        key-type Enter
    }
}
with [get-editor "NewModel State Machine Diagram" | get-diagram -index 1 | get-edit-part 
    -name "NewModel State Machine Diagram" | get-edit-part -name NewModel | get-edit-part 
    -className DNodeContainerViewNodeContainerCompartmentEditPart | get-edit-part -name Region1 | get-edit-part 
    -className DNodeContainerViewNodeContainerCompartment2EditPart | get-edit-part -name State2 
    | get-target-connection 0 | get-edit-part -className ""] {
    get-property "element.name" | equals "[Guard]" | verify-true
    verify-error{get-property "element.semanticElements.Transition[0].effect.name" | equals behaviorExpression1 | verify-true}
}