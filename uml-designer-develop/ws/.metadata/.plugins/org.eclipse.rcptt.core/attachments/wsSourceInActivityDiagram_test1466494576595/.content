// Reconnect object flow (Datastore1 to OpaqueAction1 Input_0) source side from Datastore1 to OpaqueAction2 Output_0
with [get-editor "NewModel Activity Diagram"] {
   with [get-diagram -index 1] {
   		// Select Object Flow
        with [get-edit-part -name "NewModel Activity Diagram" | get-edit-part -name NewModel | get-edit-part 
            -className DNodeContainerViewNodeContainerCompartmentEditPart] {
           with [get-edit-part -name "OpaqueAction1\r\n"
                + "\r\n"
                + "// TODO body of OpaqueAction1" | get-edit-part -name "Input_0 : [1]" | get-target-connection 1] {
                mouse-move 38 34 button1 -height 102 -width 149
                mouse-press 38 34 button1 -height 102 -width 149
                mouse-release 39 36 button1 524288 -height 105 -width 152
            }
        }
        // Select Source side
        with [get-edit-part -name "NewModel Activity Diagram" | get-edit-part -name NewModel | get-edit-part 
        -className DNodeContainerViewNodeContainerCompartmentEditPart | get-edit-part -name "OpaqueAction1\r\n"
        + "\r\n"
        + "// TODO body of OpaqueAction1" | get-edit-part -name "Input_0 : [1]" | get-target-connection 1
        | get-handle SiriusConnectionEndPointHandle]{
            mouse-move 5 1 button1 -height 7 -width 7
            mouse-press 5 1 button1 -height 7 -width 7
        }
        // Drop on OpaqueAction1 Input_0
        with [ get-edit-part -name "NewModel Activity Diagram" 
            | get-edit-part -name NewModel | get-edit-part -className DNodeContainerViewNodeContainerCompartmentEditPart
            | get-edit-part -name "OpaqueAction2\r\n"
            + "\r\n"
            + "// TODO body of OpaqueAction2" | get-edit-part -name "Output_0 : [1]"]{
            mouse-drag 1 1 button1 524288 -height 128 -width 219
            mouse-release 1 1 button1 524288 -height 128 -width 219
        }
    }

    with [get-diagram -index 1 | get-edit-part -name "NewModel Activity Diagram" 
        | get-edit-part -name NewModel | get-edit-part -className DNodeContainerViewNodeContainerCompartmentEditPart 
        | get-edit-part -name "OpaqueAction1\r\n"
        + "\r\n"
        + "// TODO body of OpaqueAction1" | get-edit-part -name "Input_0 : [1]" | get-target-connection 1] {
        get-property "element.target.target.name" | equals "Input_0" | verify-true
        get-property "element.target.source.name" | equals "Output_0" | verify-true
    }
    with [get-diagram -index 1 | get-edit-part -name "NewModel Activity Diagram" 
        | get-edit-part -name NewModel | get-edit-part -className DNodeContainerViewNodeContainerCompartmentEditPart 
        | get-edit-part -name "OpaqueAction2\r\n"
        + "\r\n"
        + "// TODO body of OpaqueAction2" | get-edit-part -name "Output_0 : [1]" | get-edit-part -name "Output_0 : [1]"] {
        get-property "element.semanticElements.OutputPin[0].incoming.size" | equals 0 | verify-true
        get-property "element.semanticElements.OutputPin[0].outgoing.size" | equals 1 | verify-true
    }
}


// Try to reconnect previous object flow source side from OpaqueAction2 Output_0 to OpaqueAction2 input_0
with [get-editor "NewModel Activity Diagram"] {
    with [get-diagram -index 1] {
   		// Select Object Flow
        with [get-edit-part -name "NewModel Activity Diagram" | get-edit-part -name NewModel | get-edit-part 
            -className DNodeContainerViewNodeContainerCompartmentEditPart] {
           with [get-edit-part -name "OpaqueAction1\r\n"
                + "\r\n"
                + "// TODO body of OpaqueAction1" | get-edit-part -name "Input_0 : [1]" | get-target-connection 1] {
                mouse-move 38 34 button1 -height 102 -width 149
                mouse-press 38 34 button1 -height 102 -width 149
                mouse-release 39 36 button1 524288 -height 105 -width 152
            }
        }
        // Select Source side
        with [get-edit-part -name "NewModel Activity Diagram" | get-edit-part -name NewModel | get-edit-part 
        -className DNodeContainerViewNodeContainerCompartmentEditPart | get-edit-part -name "OpaqueAction1\r\n"
        + "\r\n"
        + "// TODO body of OpaqueAction1" | get-edit-part -name "Input_0 : [1]" | get-target-connection 1
        | get-handle SiriusConnectionEndPointHandle]{
            mouse-move 5 1 button1 -height 7 -width 7
            mouse-press 5 1 button1 -height 7 -width 7
        }
        // Drop on OpaqueAction1 Input_0
        with [ get-edit-part -name "NewModel Activity Diagram" 
            | get-edit-part -name NewModel | get-edit-part -className DNodeContainerViewNodeContainerCompartmentEditPart
            | get-edit-part -name "OpaqueAction2\r\n"
            + "\r\n"
            + "// TODO body of OpaqueAction2" | get-edit-part -name "Input_0 : [1]"]{
            mouse-drag 1 1 button1 524288 -height 128 -width 219
            mouse-release 1 1 button1 524288 -height 128 -width 219
        }
    }
    with [get-diagram -index 1 | get-edit-part -name "NewModel Activity Diagram" 
        | get-edit-part -name NewModel | get-edit-part -className DNodeContainerViewNodeContainerCompartmentEditPart 
        | get-edit-part -name "OpaqueAction1\r\n"
        + "\r\n"
        + "// TODO body of OpaqueAction1" | get-edit-part -name "Input_0 : [1]" | get-target-connection 1] {
        get-property "element.target.target.name" | equals "Input_0" | verify-true
        get-property "element.target.source.name" | equals "Output_0" | verify-true
    }
    with [get-diagram -index 1 | get-edit-part -name "NewModel Activity Diagram" 
        | get-edit-part -name NewModel | get-edit-part -className DNodeContainerViewNodeContainerCompartmentEditPart 
        | get-edit-part -name "OpaqueAction2\r\n"
        + "\r\n"
        + "// TODO body of OpaqueAction2" | get-edit-part -name "Output_0 : [1]" | get-edit-part -name "Output_0 : [1]"] {
        get-property "element.semanticElements.OutputPin[0].incoming.size" | equals 0 | verify-true
        get-property "element.semanticElements.OutputPin[0].outgoing.size" | equals 1 | verify-true
    }
}


