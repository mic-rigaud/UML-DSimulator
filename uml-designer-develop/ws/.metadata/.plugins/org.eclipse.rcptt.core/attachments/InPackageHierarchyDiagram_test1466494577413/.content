// Create new Usage connection From Package1 to Package2
with [get-editor "NewModel Package Hierarchy"] {
    with [get-palette | get-palette-entry "Usage"] {
        mouse-move 48 0 button1 -height 23 -width 134
        mouse-press 48 0 button1 -height 23 -width 134
        mouse-release 48 0 button1 524288 -height 23 -width 134
    }
    with [get-diagram -index 1 | get-edit-part -name "NewModel Package Hierarchy"] {
        with [get-edit-part -name Package1 | get-edit-part -className WorkspaceImageEditPart] {
            mouse-move 49 37 button1 -height 50 -width 80
            mouse-press 49 37 button1 -height 50 -width 80
            mouse-release 49 37 button1 524288 -height 50 -width 80
        }
        with [get-edit-part -name Package2 | get-edit-part -className WorkspaceImageEditPart] {
            mouse-move 39 23 button1 -height 50 -width 80
            mouse-press 39 23 button1 -height 50 -width 80
            mouse-release 39 23 button1 524288 -height 50 -width 80
        }
    }
}

// Check Diagram and model
with [get-editor "NewModel Package Hierarchy" | get-diagram -index 1 | get-edit-part -name "NewModel Package Hierarchy" 
    | get-edit-part -name Package2 | get-target-connection 0] {
    get-property "element.ownedStyle.customFeatures" | equals "[]" | verify-true
    get-property "element.ownedStyle.lineStyle" | equals dash | verify-true
    get-property "element.ownedStyle.sourceArrow" | equals NoDecoration | verify-true
    get-property "element.ownedStyle.targetArrow" | equals InputArrow | verify-true
    get-property "element.ownedStyle.foldingStyle" | equals NONE | verify-true
    get-property "element.ownedStyle.size" | equals 1 | verify-true
    get-property "element.ownedStyle.routingStyle" | equals manhattan | verify-true
    //get-property "element.ownedStyle.beginLabelStyle" | equals null | verify-true
    //get-property "element.ownedStyle.endLabelStyle" | equals null | verify-true
    get-property "element.ownedStyle.centered" | equals None | verify-true
    get-edit-part -className "" | get-property "getFigure().getText()" | equals "<<use>>" | verify-true
}
// Check Model to verify connection between Package1 and Package2
with [get-editor "NewModel Package Hierarchy" | get-diagram -index 1 | get-edit-part 
    -name "NewModel Package Hierarchy"] {
    with [get-edit-part -name Package2 | get-target-connection 0] {
        get-property "element.target.source.Package[0].name" | equals Package1 | verify-true
    	get-property "element.target.target.Package[0].name" | equals Package2 | verify-true
        get-property "element.semanticElements.Usage[0].owner.name" | equals Package1 | verify-true
        get-property "element.semanticElements.Usage[0].source.Package[0].name" | equals Package1 | verify-true
        get-property "element.semanticElements.Usage[0].target.Package[0].name" | equals Package2 | verify-true
    }
    get-property "element.target.member.Package[0].ownedElement.PackageImport[0].source.Package[0].name" 
        | equals Package1 | verify-true
    get-property "element.target.member.Package[0].ownedElement.PackageImport[0].target.Package[0].name" 
        | equals Package2 | verify-true
    get-property "element.target.member.Package[0].name" | equals Package1 | verify-true
    get-property "element.target.member.Package[1].ownedElement.size" | equals 0 | verify-true
    get-property "element.target.member.Package[1].name" | equals Package2 | verify-true
}
