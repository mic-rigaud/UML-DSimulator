// Delete Contained In existing connection from Package1 to Package2
with [get-editor "NewModel Package Hierarchy"] {
    with [get-diagram -index 1 | get-edit-part -name "NewModel Package Hierarchy"] {
        mouse-move 233 183 -height 524 -width 793
        with [get-edit-part -name Package2 | get-target-connection 0] {
            mouse-move 28 100 button1 -height 181 -width 59
            mouse-press 28 100 button1 -height 181 -width 59
            mouse-release 28 100 button1 524288 -height 181 -width 59
        }
    }
    get-button "Delete from Model" | click
}

// Check Diagram and model
get-editor "NewModel Package Hierarchy" | get-diagram -index 1 | get-edit-part -name "NewModel Package Hierarchy" 
    | get-edit-part -name Package2 | verify-error {get-target-connection 0}
  
// Check Model to verify Package1 is straight under diagram
with [get-editor "NewModel Package Hierarchy" | get-diagram -index 1 | get-edit-part 
    -name "NewModel Package Hierarchy"] {
    get-property "element.target.name" | equals NewModel | verify-true
    get-property "element.target.ownedMember.Package[0].name" | equals Package2 | verify-true
    verify-error {get-property "element.target.ownedMember.Package[0].member.Package[0].name" | equals Package4 | verify-true}
    get-property "element.target.ownedMember.Package[1].name" | equals Package3 | verify-true
    get-property "element.target.ownedMember.Package[2].name" | equals Package4 | verify-true
    get-property "element.target.ownedMember.Package[3].name" | equals Package1 | verify-true
}