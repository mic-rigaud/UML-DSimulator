// Open contextual menu Add Related Elements
with [get-editor "Test Use Case Diagram2"] {
    with [get-diagram -index 1] {
        with [get-edit-part -name "Test Use Case Diagram2"] {
            mouse-move 273 135 button3 -height 328 -width 769
            mouse-press 273 135 button3 -height 328 -width 769
            mouse-release 273 135 button3 2097152 -height 328 -width 769
        }
        get-menu "Add Related Elements" | click
    }
}

// Check elements added to diagram
with [get-editor "Test Use Case Diagram2" | get-diagram -index 1 | get-edit-part -name "Test Use Case Diagram2"] {
    // Check number of Elements
    get-property childrenCount | equals 7 | verify-true
    get-property "getConnections().size()" | equals 4 | verify-true
    get-property "getFigure().getChildren().size()" | equals 7 | verify-true
   
    // Check elements are presents in diagram
    // Check connections
    get-edit-part -name Actor1 | get-target-connection 1|get-property "getFigure().isVisible()" | equals true 
        | verify-true
    get-edit-part -name Actor1 | get-target-connection 0 | get-property "getFigure().isVisible()" | equals true 
        | verify-true
    get-edit-part -name UseCaseTest1 | get-target-connection 0 | get-property "getFigure().isVisible()" | equals true 
        | verify-true
    get-edit-part -name UseCaseTest2 | get-target-connection 0 | get-property "getFigure().isVisible()" | equals true 
        | verify-true
    // Check elements    
    get-edit-part -name Actor1
    get-edit-part -name Actor2 
    get-edit-part -name Actor3 
    get-edit-part -name Actor4 
    get-edit-part -name UseCaseTest1 | get-edit-part -className WorkspaceImageEditPart | get-figure "0/0" 
        | get-property "isVisible()" | equals true | verify-true
    get-edit-part -name UseCaseTest2 | get-edit-part -className WorkspaceImageEditPart | get-figure "0/0" 
        | get-property "isVisible()" | equals true | verify-true
    get-edit-part -name UseCaseTest3 | get-edit-part -className WorkspaceImageEditPart | get-figure "0/0" 
        | get-property "isVisible()" | equals true | verify-true
}