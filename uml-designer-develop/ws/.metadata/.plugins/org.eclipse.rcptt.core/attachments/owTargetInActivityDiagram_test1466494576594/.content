// Reconnect control flow target from DecisionNode1 to OpaqueAction2 node
with [get-editor "NewModel Activity Diagram"] {
    with [get-diagram -index 1 | get-edit-part -name "NewModel Activity Diagram"] {
        with [get-edit-part -name NewModel | get-edit-part 
            -className DNodeContainerViewNodeContainerCompartmentEditPart] {
            with [get-edit-part -name "Decision1" | get-target-connection 0 | get-handle SiriusConnectionEndPointHandle 
                -index 1] {
                mouse-move 5 1 button1 -height 7 -width 7
                mouse-press 5 1 button1 -height 7 -width 7
            }
        }
        with [get-edit-part -name NewModel 
        | get-edit-part -className DNodeContainerViewNodeContainerCompartmentEditPart |
        get-edit-part -name "OpaqueAction2\r\n"
            + "\r\n"
            + "// TODO body of OpaqueAction2" | get-edit-part 
            -className DNodeContainerViewNodeContainerCompartment2EditPart]{
            mouse-drag 1 1 button1 524288 -height 524 -width 793
            mouse-release 1 1 button1 524288 -height 524 -width 793
        }
    }
}
// Check diagram
with [get-editor "NewModel Activity Diagram" | get-diagram -index 1 | get-edit-part -name "NewModel Activity Diagram" 
    | get-edit-part -name NewModel | get-edit-part -className DNodeContainerViewNodeContainerCompartmentEditPart] {

    get-edit-part -name "Decision1" | verify-error{get-target-connection 0}

    with [get-edit-part -name "OpaqueAction2\r\n"
        + "\r\n"
        + "// TODO body of OpaqueAction2" | get-target-connection 0] {
        get-property "element.target.name" | equals "" | verify-true
    }
}

// Check model
with [get-editor "NewModel Activity Diagram" | get-diagram -index 1 | get-edit-part -name "NewModel Activity Diagram" 
    | get-edit-part -name NewModel | get-edit-part -className DNodeContainerViewNodeContainerCompartmentEditPart] {

    with [get-edit-part -name "OpaqueAction2\r\n"
        + "\r\n"
        + "// TODO body of OpaqueAction2" | get-target-connection 0] {
        get-property "element.target.target.name" | equals OpaqueAction2 | verify-true
        get-property "element.target.source.name" | equals OpaqueAction1 | verify-true
    }
}