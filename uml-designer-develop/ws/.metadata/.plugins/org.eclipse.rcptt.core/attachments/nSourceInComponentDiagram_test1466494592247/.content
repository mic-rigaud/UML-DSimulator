

// Move InterfaceRealization Source from Component1 to Component2
get-editor "NewModel Component Diagram" | get-diagram -index 1 | get-edit-part -name "NewModel Component Diagram" 
    | get-property "getFigure().isVisible()" | equals true | verify-true
with [get-editor "NewModel Component Diagram"] {
    with [get-diagram -index 1 | get-edit-part -name "NewModel Component Diagram"] {
        mouse-move 127 149 -height 524 -width 657
        with [get-edit-part -name Interface1 -index 1 | get-target-connection 0 
            | get-handle SiriusConnectionEndPointHandle] {
            mouse-move 5 4 button1 -height 7 -width 7
            mouse-press 5 4 button1 -height 7 -width 7
            mouse-move 6 5 -mask 524288 -height 7 -width 7
        }
        mouse-drag 372 119 button1 524288 -height 524 -width 657
        mouse-release 372 119 button1 524288 -height 524 -width 657
    }
    with [get-diagram -index 1 | get-edit-part -name "NewModel Component Diagram"] {
        get-edit-part -name Component2 | get-edit-part -className DNodeContainerViewNodeContainerCompartmentEditPart 
            | mouse-hover 102 79 -height 98 -width 118
        mouse-move 32 462 -height 524 -width 657
    }
}

// Check diagram and model
with [get-editor "NewModel Component Diagram" | get-diagram -index 1 | get-edit-part -name "NewModel Component Diagram" 
    | get-edit-part -name Interface1 -index 1 | get-target-connection 0] {
    get-property "source.element.name" | equals Component2 | verify-true
    get-property "target.element.name" | equals Interface1 | verify-true
    get-property "getFigure().isVisible()" | equals true | verify-true
}