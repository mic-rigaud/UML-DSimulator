// Reconnect controlflow (Parameter1 to Datastore1) target side from Datastore1 to OpaqueAction1 Input_0
with [get-editor "NewModel Activity Diagram"] {
    with [get-diagram -index 1] {
        with [get-edit-part -name "NewModel Activity Diagram"] {
            with [get-edit-part -name NewModel | get-edit-part 
                -className DNodeContainerViewNodeContainerCompartmentEditPart] {
                with [get-edit-part -name "«Datastore»\r\n"
                    + "DataStore1" | get-target-connection 0] {
                    mouse-move 132 29 button1 -height 89 -width 149
                    mouse-press 132 29 button1 -height 89 -width 149
                    mouse-release 132 29 button1 524288 -height 89 -width 149
                }
            }
        }
        
        // Select Target side
        with [get-edit-part -name "NewModel Activity Diagram" | get-edit-part -name NewModel 
            | get-edit-part -className DNodeContainerViewNodeContainerCompartmentEditPart 
            | get-edit-part -name "«Datastore»\r\n"
            + "DataStore1" | get-target-connection 0 
            | get-handle SiriusConnectionEndPointHandle -index 1]{
                mouse-move 5 1 button1 -height 7 -width 7
                mouse-press 5 1 button1 -height 7 -width 7
        }
    }
   // Drop on OpaqueAction1 Input_0
    with [get-diagram -index 1 | get-edit-part -name "NewModel Activity Diagram" 
         | get-edit-part -name NewModel | get-edit-part -className DNodeContainerViewNodeContainerCompartmentEditPart ]{
         with[get-edit-part -name "OpaqueAction1\r\n"
            + "\r\n"
            + "// TODO body of OpaqueAction1" | get-edit-part -name "Input_0 : [1]"]{
            mouse-drag 1 1 button1 524288 -height 128 -width 219
            mouse-release 1 1 button1 524288 -height 128 -width 219
            }
    }
    
    // Check Diagram
    with [get-diagram -index 1 | get-edit-part -name "NewModel Activity Diagram" 
        | get-edit-part -name NewModel | get-edit-part -className DNodeContainerViewNodeContainerCompartmentEditPart 
        | get-edit-part -name "OpaqueAction1\r\n"
        + "\r\n"
        + "// TODO body of OpaqueAction1" | get-edit-part -name "Input_0 : [1]" | get-target-connection 2] {
        get-property "element.target.target.name" | equals "Input_0" | verify-true
        get-property "element.target.source.name" | equals Parameter1 | verify-true
    }
    get-diagram -index 1 | get-edit-part -name "NewModel Activity Diagram" | get-edit-part -name NewModel 
        | get-edit-part -className DNodeContainerViewNodeContainerCompartmentEditPart 
        | get-edit-part -name "OpaqueAction1\r\n"
        + "\r\n"
        + "// TODO body of OpaqueAction1" | get-edit-part -name "Input_0 : [1]" | get-edit-part -name "Input_0 : [1]" 
        | get-property "element.incomingEdges.size" | equals 3 | verify-true
}

// Try to reconnect controlflow (Parameter1 to OpaqueAction1Input_0) target side from OpaqueAction1Input_0 to OpaqueAction1 Output_0
// (invalid operation)
with [get-editor "NewModel Activity Diagram"] {
    with [get-diagram -index 1] {
        with [get-edit-part -name "NewModel Activity Diagram"] {
            with [get-edit-part -name NewModel | get-edit-part 
                -className DNodeContainerViewNodeContainerCompartmentEditPart] {
                with [get-edit-part -name "OpaqueAction1\r\n"
        + "\r\n"
        + "// TODO body of OpaqueAction1" | get-edit-part -name "Input_0 : [1]" | get-target-connection 2] {
                    mouse-move 1 1 button1 -height 89 -width 149
                    mouse-press 1 1 button1 -height 89 -width 149
                    mouse-release 1 1 button1 524288 -height 89 -width 149
                }
            }
        }
        // Select Target side
        with [get-edit-part -name "NewModel Activity Diagram" | get-edit-part -name NewModel 
            | get-edit-part -className DNodeContainerViewNodeContainerCompartmentEditPart 
            | get-edit-part -name "OpaqueAction1\r\n"
            + "\r\n"
            + "// TODO body of OpaqueAction1" | get-edit-part -name "Input_0 : [1]" 
            | get-target-connection 2 
            | get-handle SiriusConnectionEndPointHandle -index 1]{
                mouse-move 5 1 button1 -height 7 -width 7
                mouse-press 5 1 button1 -height 7 -width 7
        }
    }
   // Drop on OpaqueAction1 Input_0
    with [get-diagram -index 1 | get-edit-part -name "NewModel Activity Diagram" 
         | get-edit-part -name NewModel | get-edit-part -className DNodeContainerViewNodeContainerCompartmentEditPart ]{
         with[get-edit-part -name "OpaqueAction1\r\n"
            + "\r\n"
            + "// TODO body of OpaqueAction1" | get-edit-part -name "Output_0 : [1]"]{
            mouse-drag 1 1 button1 524288 -height 128 -width 219
            mouse-release 1 1 button1 524288 -height 128 -width 219
            }
    }
    
    // Check object Flow target was not moved
    get-diagram -index 1 | get-edit-part -name "NewModel Activity Diagram" | get-edit-part -name NewModel 
        | get-edit-part -className DNodeContainerViewNodeContainerCompartmentEditPart 
        | get-edit-part -name "OpaqueAction1\r\n"
        + "\r\n"
        + "// TODO body of OpaqueAction1" | get-edit-part -name "Input_0 : [1]" | get-edit-part -name "Input_0 : [1]" 
        | get-property "element.incomingEdges.size" | equals 3 | verify-true
}

