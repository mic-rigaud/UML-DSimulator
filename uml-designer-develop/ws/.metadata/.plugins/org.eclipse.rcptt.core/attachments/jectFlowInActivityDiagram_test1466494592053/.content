// Direct edit an objectFlow
with [get-editor "NewModel Activity Diagram"] {
    with [get-diagram -index 1] {
        with [get-edit-part -name "NewModel Activity Diagram" | get-edit-part -name NewModel | get-edit-part 
            -className DNodeContainerViewNodeContainerCompartmentEditPart] {
            with [get-edit-part -name "OpaqueAction1\r\n"
                + "\r\n"
                + "// TODO body of OpaqueAction1" | get-edit-part -name "Input_0 : [1]" | get-target-connection 0 
                | get-edit-part -className ""] {
                mouse-move 16 12 button1 -height 13 -width 78
                mouse-press 16 12 button1 -height 13 -width 78
                mouse-release 16 12 button1 524288 -height 13 -width 78
            }
        }
        key-type F2
        with [get-edit-part -name "NewModel Activity Diagram" | get-edit-part -name NewModel | get-edit-part 
            -className DNodeContainerViewNodeContainerCompartmentEditPart | get-edit-part -name "OpaqueAction1\r\n"
            + "\r\n"
            + "// TODO body of OpaqueAction1" | get-edit-part -name "Input_0 : [1]" | get-target-connection 0 
            | get-edit-part -className ""] {
            activate-direct-edit
        }
    }
    get-editbox | set-text "New Name"
    with [get-diagram -index 1] {
        commit-direct-edit
		key-type ESC
    }
    
}
// check diagram and model
with [get-editor "NewModel Activity Diagram" | get-diagram -index 1 | get-edit-part -name "NewModel Activity Diagram" 
    | get-edit-part -name NewModel | get-edit-part -className DNodeContainerViewNodeContainerCompartmentEditPart 
    | get-edit-part -name "OpaqueAction1\r\n"
    + "\r\n"
    + "// TODO body of OpaqueAction1" | get-edit-part -name "Input_0 : [1]" | get-target-connection 0] {
    get-edit-part -className "" | get-property "getFigure().getText()" | equals "New Name" | verify-true
    get-property "element.target.name" | equals "New Name" | verify-true
}