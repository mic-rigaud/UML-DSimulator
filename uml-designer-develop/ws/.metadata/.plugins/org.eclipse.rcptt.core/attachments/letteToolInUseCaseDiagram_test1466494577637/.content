with [get-editor "NewModel Use Case Diagram"] {
    with [get-palette | get-palette-entry Extend] {
        mouse-move 65 11 button1 -height 23 -width 146
        mouse-press 65 11 button1 -height 23 -width 146
        mouse-release 65 11 button1 524288 -height 23 -width 146
    }
    with [get-diagram -index 1 | get-edit-part -name "NewModel Use Case Diagram"] {
        with [get-edit-part -name UseCase1 | get-edit-part -className WorkspaceImageEditPart] {
            mouse-move 60 10 button1 -height 47 -width 140
            mouse-press 60 10 button1 -height 47 -width 140
            mouse-release 60 10 button1 524288 -height 47 -width 140
        }
        with [get-edit-part -name UseCase2 | get-edit-part -className WorkspaceImageEditPart] {
            mouse-move 67 23 button1 -height 47 -width 140
            mouse-press 67 23 button1 -height 47 -width 140
            mouse-release 67 23 button1 524288 -height 47 -width 140
        }
    }
}
// Check diagram
with [get-editor "NewModel Use Case Diagram" | get-diagram -index 1 | get-edit-part -name "NewModel Use Case Diagram" 
    | get-edit-part -name UseCase2 | get-target-connection 0] {
    get-property "element.target.source.UseCase[0].name" | equals UseCase1 | verify-true
    get-property "element.target.target.UseCase[0].name" | equals UseCase2 | verify-true
    get-property "element.ownedStyle.customFeatures" | equals "[]" | verify-true
    get-property "element.ownedStyle.lineStyle" | equals dash | verify-true
    get-property "element.ownedStyle.sourceArrow" | equals NoDecoration | verify-true
    get-property "element.ownedStyle.targetArrow" | equals InputArrow | verify-true
    get-property "element.ownedStyle.foldingStyle" | equals NONE | verify-true
    get-property "element.ownedStyle.size" | equals 1 | verify-true
    get-property "element.ownedStyle.routingStyle" | equals straight | verify-true
    //get-property "element.ownedStyle.beginLabelStyle" | equals null | verify-true
    //get-property "element.ownedStyle.endLabelStyle" | equals null | verify-true
    get-property "element.ownedStyle.centered" | equals None | verify-true
    get-property "source.element.name" | equals UseCase1 | verify-true
    get-property "target.element.name" | equals UseCase2 | verify-true
}
get-editor "NewModel Use Case Diagram" | get-diagram -index 1 | get-edit-part -name "NewModel Use Case Diagram" 
    | get-edit-part -name UseCase2 | get-target-connection 0 | get-edit-part -className "" 
    | get-property "getFigure().getText()" | equals "« extend »" | verify-true
// Check model
with [get-editor "NewModel Use Case Diagram" | get-diagram -index 1 | get-edit-part -name "NewModel Use Case Diagram" 
    | get-edit-part -name UseCase2 | get-target-connection 0] {
    get-property "element.target.source.UseCase[0].name" | equals UseCase1 | verify-true
    get-property "element.target.target.UseCase[0].name" | equals UseCase2 | verify-true
}

// try to create an extend between two actors
with [get-editor "NewModel Use Case Diagram"] {
    get-diagram -index 1 | get-edit-part -name "NewModel Use Case Diagram" | mouse-move 780 200 -height 524 -width 781
    with [get-palette | get-palette-entry Extend] {
        mouse-move 34 3 button1 -height 23 -width 146
        mouse-press 34 3 button1 -height 23 -width 146
        mouse-release 34 3 button1 524288 -height 23 -width 146
    }
    with [get-diagram -index 1 | get-edit-part -name "NewModel Use Case Diagram"] {
        with [get-edit-part -name Actor2 | get-edit-part -className WorkspaceImageEditPart] {
            mouse-move 23 16 button1 -height 52 -width 30
            mouse-press 23 16 button1 -height 52 -width 30
            mouse-release 23 16 button1 524288 -height 52 -width 30
        }
        with [get-edit-part -name Actor1 | get-edit-part -className WorkspaceImageEditPart] {
            mouse-move 27 18 button1 -height 52 -width 30
            mouse-press 27 18 button1 -height 52 -width 30
            mouse-release 27 18 button1 524288 -height 52 -width 30
        }
    }
}
