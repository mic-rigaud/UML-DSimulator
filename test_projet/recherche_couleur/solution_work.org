public void changerColor() {
        Session mysession = SessionManager.INSTANCE.getSessions().toArray(new Session[0])[0];
        String phrase = "-----" + mysession.toString();

        if (mysession != null) {
            final Collection<DRepresentation> representations = DialectManager.INSTANCE.getAllRepresentations(mysession);

            for (final DRepresentation representation : representations) {

                if (representation instanceof DSemanticDiagram) {
                    DSemanticDiagram diagram = (DSemanticDiagram) representation;
                    phrase += "\n------------- " + diagram.getName() + "----------------";

                    // EList<DDiagramElement> dlist =
                    // diagram.getDiagramElements();
                    // System.out.println(dlist.size());

                    // EList<DNode> nodes = diagram.getNodes();
                    // System.out.println("taille nodes :" + nodes.size());
                    //
                    // for (int k = 0; k < nodes.size(); k++) {
                    // phrase += "\nnodes:" + nodes.get(k).toString();
                    // if (nodes.get(k) instanceof DNode) {
                    // DNode dnode = nodes.get(k);
                    // System.out.println("coucou!");
                    // NodeStyle style = dnode.getOwnedStyle();
                    // RGBValues rgb = RGBValues.create(255, 0, 0);
                    // if (style instanceof Square) {
                    // ((Square) style).setColor(rgb);
                    // } else if (style instanceof Lozenge) {
                    // ((Lozenge) style).setColor(rgb);
                    // } else if (style instanceof Ellipse) {
                    // ((Ellipse) style).setColor(rgb);
                    // } else if (style instanceof Dot) {
                    // ((Dot) style).setBackgroundColor(rgb);
                    // } else if (style instanceof Note) {
                    // ((Note) style).setColor(rgb);
                    // } else if (style instanceof BundledImage) {
                    // ((BundledImage) style).setColor(rgb);
                    // }
                    // }
                    // }

                    for (int i = 0; i < diagram.getNodeListElements().size(); i++) {
                        phrase += "\n";
                        phrase += "nom:" + diagram.getDiagramElements().get(i).getName();
                        DNodeListElement dnode = diagram.getNodeListElements().get(i);
                        // DDiagramElement node =
                        // diagram.getDiagramElements().get(i);

                        final Style style = dnode.getStyle();

                        if (style.getDescription() instanceof SquareDescription) {

                            SquareDescription sd = (SquareDescription) style.getDescription();
                            TransactionalEditingDomain domain = TransactionUtil.getEditingDomain(sd);
                            domain.getCommandStack().execute(new RecordingCommand(domain) {

                                @Override
                                protected void doExecute() {
                                    ColorDescription cd = sd.getBorderColor();
                                    SystemColor sc = (SystemColor) cd;

                                    sc.setBlue(0);
                                    sc.setGreen(255);
                                    sc.setRed(0);
                                    sd.setBorderColor(sc);
                                    sd.setWidth(10);
                                    sd.setBorderSizeComputationExpression("2");
                                }
                            });

                            System.out.println("Coucou les amis!!");
                            // // sync.setColor((ContainerStyle) style,
                            // // SystemColors.DARK_PURPLE_LITERAL);
                            // // ((FlatContainerStyle) style).eSet(struct,
                            // //
                            // (VisualBindingManager.getDefault().getRGBValuesFor(SystemColors.DARK_PURPLE_LITERAL)));
                            // ((FlatContainerStyle)
                            // style).setBorderColor(VisualBindingManager.getDefault().getRGBValuesFor(SystemColors.DARK_PURPLE_LITERAL));
                            // //
                            // setForegroundColor(VisualBindingManager.getDefault().getRGBValuesFor(SystemColors.DARK_PURPLE_LITERAL));
                        }
                    }

                    // final TransactionalEditingDomain domain =
                    // TransactionUtil.getEditingDomain(node);
                    // final RecordingCommand cmd = new
                    // RecordingCommand(domain) {
                    //
                    // @Override
                    // protected void doExecute() {
                    // Style style = node.getStyle();
                    // System.out.println(node.getName() + " : " + style);
                    // RGBValues rgb = RGBValues.create(255, 0, 0);
                    // ViewPropertiesSynchronizer sync = new
                    // ViewPropertiesSynchronizer();
                    // if (style instanceof FlatContainerStyle) {
                    // // sync.setColor((ContainerStyle) style,
                    // // SystemColors.DARK_PURPLE_LITERAL);
                    // ((FlatContainerStyle)
                    // style).setForegroundColor(VisualBindingManager.getDefault().getRGBValuesFor(SystemColors.DARK_PURPLE_LITERAL));
                    // }
                    //
                    // }
                    // };

                    // //////////////////////////////////
                    // Collection<Viewpoint> view =
                    // mysession.getSelectedViewpoints(true);
                    // for (Viewpoint toto : view) {
                    // if (toto instanceof DSemanticDecorator) {
                    // System.out.println("Allo le monde!!");
                    // }
                    // }
                    // ////////////////
                    // Style style = node.getStyle();
                    // RGBValues rgb = RGBValues.create(255, 0, 0);
                    // if (style instanceof Square) {
                    // ((Square) style).setColor(rgb);
                    // } else if (style instanceof Lozenge) {
                    // ((Lozenge) style).setColor(rgb);
                    // } else if (style instanceof Ellipse) {
                    // ((Ellipse) style).setColor(rgb);
                    // } else if (style instanceof Dot) {
                    // ((Dot) style).setBackgroundColor(rgb);
                    // } else if (style instanceof Note) {
                    // ((Note) style).setColor(rgb);
                    // } else if (style instanceof BundledImage) {
                    // ((BundledImage) style).setColor(rgb);
                    // }
                    // Font f;

                }

            }
        }

        showMessage(phrase);

    }
}
